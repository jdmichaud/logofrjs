// Jean-Daniel Michaud - 2015
//
// The simplified french logo grammar in peg.js format

program =
  i:( instruction ) * {
    return {
      type: "PROGRAM",
      instructions: i
    };
  }

keyword =
  k:[a-zA-Z]+ { return k.join(''); }

integer =
  [0-9]+

// Whitespaces
ws =
  [ \t  ]

// Matches any number of whitespace/comments in a row
_  =
  (ws)*

// newlines are our only instruction separator
newline =
  [\n\r\u2028\u2029]

sourceCharacter
  = .

comment
  = "//" (!newline sourceCharacter)*

repeat_loop =
  ("REPETE" / "repete") _ digits:integer newline? i:instruction_list {
    return {
      type: "REPEAT",
      instructions: i,
      line: location().start.line
    }
  }

instruction_list =
  "[" _ newline? i: ( instruction ) * "]" {
    return {
      type: "LIST",
      instruction: i,
      line: location().start.line
    }
  }

arg_instruction =
  k:keyword _ digits:integer _ newline? {
    return {
      type: "INSTRUCTION",
      command: k,
      arg: parseInt(digits.join(""), 10),
      line: location().start.line
    };
  }

noarg_instruction =
  k:keyword _ newline? {
    return {
      type: "INSTRUCTION",
      command: k,
      line: location().start.line
    };
  }

null_instruction =
  comment _? newline {
    return { type: "NOOP" };
  }
  / _? newline {
    return { type: "NOOP" };
  }

// Define what is an instruction
instruction =
  null_instruction
  / arg_instruction
  / noarg_instruction
  / instruction_list
  / repeat_loop
